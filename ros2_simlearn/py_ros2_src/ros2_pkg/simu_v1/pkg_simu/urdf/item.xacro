<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="robot_name">
  
  <!-- 宏定义：支撑 -->
  <xacro:macro name="linker_support" params="name">
    <!-- 零件描述 -->
    <link name="${name}">
      <!-- 外观描述 -->
      <visual>
        <!-- 相对坐标系 -->
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
        <!-- 几何形状 -->
        <geometry>
          <!-- 长方体 -->
          <box size="0.0 0.0 0.0"/>
        </geometry>
        <!-- 材质 -->
        <material name="material_${name}">
          <!-- 颜色 -->
          <color rgba="0.0 0.0 0.0 0.0"/>
        </material>
      </visual>
    </link>
  </xacro:macro>

  <!-- 宏定义：方形零件 -->
  <xacro:macro name="linker_box" params="name length width height color_r color_g color_b color_a mass">
    <!-- 零件描述 -->
    <link name="${name}">
      <!-- 外观描述 -->
      <visual>
        <!-- 相对坐标系 -->
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
        <!-- 几何形状 -->
        <geometry>
          <!-- 长方体 -->
          <box size="${length} ${width} ${height}"/>
        </geometry>
        <!-- 材质 -->
        <material name="material_${name}">
          <!-- 颜色 -->
          <color rgba="${color_r} ${color_g} ${color_b} ${color_a}"/>
        </material>
      </visual>
      <!-- 物理描述 -->
      <collision>
        <!-- 相对坐标系 -->
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
        <!-- 几何形状 -->
        <geometry>
          <!-- 长方体 -->
          <box size="${length} ${width} ${height}"/>
        </geometry>
        <!-- 材质 -->
        <material name="material_${name}">
          <!-- 颜色 -->
          <color rgba="${color_r} ${color_g} ${color_b} ${color_a}"/>
        </material>
      </collision>
      <!-- 物理属性 -->
      <inertial>
        <mass value="${mass}"/>
        <inertia ixx="${(mass/12)*(height*height+width*width)}" ixy="0.0" ixz="0.0" iyy="${(mass/12)*(length*length+width*width)}" iyz="0.0" izz="${(mass/12)*(length*length+height*height)}"/>
      </inertial>
    </link>
  </xacro:macro>
  
  <!-- 宏定义：圆柱形零件 -->
  <xacro:macro name="linker_cylinder" params="name radius length origin_rpy_r origin_rpy_p origin_rpy_y color_r color_g color_b color_a mass">
    <!-- 零件描述 -->
    <link name="${name}">
      <!-- 外观描述 -->
      <visual>
        <!-- 相对坐标系 -->
        <origin xyz="0.0 0.0 0.0" rpy="${origin_rpy_r} ${origin_rpy_p} ${origin_rpy_y}"/>
        <!-- 几何形状 -->
        <geometry>
          <!-- 圆柱体 -->
          <cylinder radius="${radius}" length="${length}"/>
        </geometry>
        <!-- 材质 -->
        <material name="material_${name}">
          <!-- 颜色 -->
          <color rgba="${color_r} ${color_g} ${color_b} ${color_a}"/>
        </material>
      </visual>
      <!-- 物理描述 -->
      <collision>
        <!-- 相对坐标系 -->
        <origin xyz="0.0 0.0 0.0" rpy="${origin_rpy_r} ${origin_rpy_p} ${origin_rpy_y}"/>
        <!-- 几何形状 -->
        <geometry>
          <!-- 圆柱体 -->
          <cylinder radius="${radius}" length="${length}"/>
        </geometry>
        <!-- 材质 -->
        <material name="material_${name}">
          <!-- 颜色 -->
          <color rgba="${color_r} ${color_g} ${color_b} ${color_a}"/>
        </material>
      </collision>
      <!-- 物理属性 -->
      <inertial>
        <mass value="${mass}"/>
        <inertia ixx="${(mass/12)*(3*radius*radius+length*length)}" ixy="0.0" ixz="0.0" iyy="${(mass/12)*(3*radius*radius+length*length)}" iyz="0.0" izz="${(mass/2)*(radius*radius)}"/>
      </inertial>
    </link>
  </xacro:macro>

  <!-- 宏定义：球形零件 -->
  <xacro:macro name="linker_sphere" params="name radius color_r color_g color_b color_a mass">
    <!-- 零件描述 -->
    <link name="${name}">
      <!-- 外观描述 -->
      <visual>
        <!-- 相对坐标系 -->
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
        <!-- 几何形状 -->
        <geometry>
          <!-- 球体 -->
          <sphere radius="${radius}"/>
        </geometry>
        <!-- 材质 -->
        <material name="material_${name}">
          <!-- 颜色 -->
          <color rgba="${color_r} ${color_g} ${color_b} ${color_a}"/>
        </material>
      </visual>
      <!-- 物理描述 -->
      <collision>
        <!-- 相对坐标系 -->
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
        <!-- 几何形状 -->
        <geometry>
          <!-- 球体 -->
          <sphere radius="${radius}"/>
        </geometry>
        <!-- 材质 -->
        <material name="material_${name}">
          <!-- 颜色 -->
          <color rgba="${color_r} ${color_g} ${color_b} ${color_a}"/>
        </material>
      </collision>
      <!-- 物理属性 -->
      <inertial>
        <mass value="${mass}"/>
        <inertia ixx="${(2/5)*mass*(radius*radius)}" ixy="0.0" ixz="0.0" iyy="${(2/5)*mass*(radius*radius)}" iyz="0.0" izz="${(2/5)*mass*(radius*radius)}"/>
      </inertial>
    </link>
  </xacro:macro>

  <!-- 宏定义：固定连接 -->
  <xacro:macro name="joint_fixed" params="name parent child origin_xyz_x origin_xyz_y origin_xyz_z origin_rpy_r origin_rpy_p origin_rpy_y">
  <!-- 固定连接 -->
    <joint name="${name}" type="fixed">
        <!-- 父对象 -->
        <parent link="${parent}"/>
        <!-- 子对象 -->
        <child link="${child}"/>
        <!-- 固定位置 -->
        <origin xyz="${origin_xyz_x} ${origin_xyz_y} ${origin_xyz_z}" rpy="${origin_rpy_r} ${origin_rpy_p} ${origin_rpy_y}"/>
    </joint>
  </xacro:macro>

  <!-- 宏定义：连续连接 -->
  <xacro:macro name="joint_continuous" params="name parent child origin_xyz_x origin_xyz_y origin_xyz_z origin_rpy_r origin_rpy_p origin_rpy_y axis_x axis_y axis_z">
  <!-- 连续连接 -->
    <joint name="${name}" type="continuous">
        <!-- 父对象 -->
        <parent link="${parent}"/>
        <!-- 子对象 -->
        <child link="${child}"/>
        <!-- 固定位置 -->
        <origin xyz="${origin_xyz_x} ${origin_xyz_y} ${origin_xyz_z}" rpy="${origin_rpy_r} ${origin_rpy_p} ${origin_rpy_y}"/>
        <!-- 旋转轴 -->
        <axis xyz="${axis_x} ${axis_y} ${axis_z}"/>
    </joint>
  </xacro:macro>

  <!-- 宏定义：差速控制 -->
  <xacro:macro name="diffdriver" params="name namespace left_joint right_joint wheel_separation wheel_diameter odometry_frame robot_base_frame">
    <!-- 差速控制 -->
    <gazebo>
      <!-- Gazebo差速控制插件 -->
      <plugin name="gazebo_ros_diff_drive_${name}" filename="libgazebo_ros_diff_drive.so">
        <!-- ROS通信配置 -->
        <ros>
          <!-- 设置命名空间 -->
          <namespace>${namespace}</namespace>
        </ros>
        <!-- 更新频率 -->
        <update_rate>100</update_rate>
        <!-- 左轮joint名称 -->
        <left_joint>${left_joint}</left_joint>
        <!-- 右轮joint名称 -->
        <right_joint>${right_joint}</right_joint>
        <!-- 两轮中心距离 -->
        <wheel_separation>${wheel_separation}</wheel_separation>
        <!-- 轮子半径 -->
        <wheel_diameter>${wheel_diameter}</wheel_diameter>
        <!-- 轮子的最大扭矩 -->
        <max_wheel_torque>20</max_wheel_torque>
        <!-- 轮子的最大角加速度 -->
        <max_wheel_acceleration>1.0</max_wheel_acceleration>
        <!-- 命令话题名称 -->
        <command_topic>cmd_vel</command_topic>
        <!-- 是否发布里程计 -->
        <publish_odom>true</publish_odom>
        <!-- 是否发布里程计tf -->
        <publish_odom_tf>true</publish_odom_tf>
        <!-- 是否发布轮子tf -->
        <publish_wheel_tf>true</publish_wheel_tf>
        <!-- 里程计话题名称 -->
        <odometry_topic>odom</odometry_topic>
        <!-- 里程计坐标系 -->
        <odometry_frame>${odometry_frame}</odometry_frame>
        <!-- 机器人坐标系 -->
        <robot_base_frame>${robot_base_frame}</robot_base_frame>
      </plugin>
    </gazebo>
  </xacro:macro>

  <!-- 宏定义：激光雷达 -->
  <xacro:macro name="laserdriver" params="reference name pose_r pose_p pose_y namespace frame_name">
    <!-- 绑定到模型 -->
    <gazebo reference="${reference}">
      <!-- 类型和名称 -->
      <sensor type="ray" name="${name}">
        <!-- 挂载姿态 -->
        <pose>0 0 0 ${pose_r} ${pose_p} ${pose_y}</pose>
        <!-- 可视化射线 -->
        <visualize>true</visualize>
        <!-- 刷新频率 -->
        <update_rate>100</update_rate>
        <!-- 雷达配置 -->
        <ray>
          <scan>
            <horizontal>
              <!-- 采样点数量 -->
              <samples>720</samples>
              <!-- 分辨率 -->
              <resolution>1</resolution>
              <!-- 扫描的最小角度 -->
              <min_angle>0</min_angle>
              <!-- 扫描的最大角度 -->
              <max_angle>6.28</max_angle>
            </horizontal>
          </scan>
          <!-- 测距范围配置 -->
          <range>
            <!-- 最小测量距离 -->
            <min>0.10</min>
            <!-- 最大测量距离 -->
            <max>20.0</max>
            <!-- 分辨率 -->
            <resolution>0.01</resolution>
          </range>
          <!-- 噪声模型 -->
          <noise>
            <!-- 噪声类型 -->
            <type>gaussian</type>
            <!-- 噪声均值 -->
            <mean>0.0</mean>
            <!-- 噪声强度 -->
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <!-- Gazebo激光雷达插件 -->
        <plugin name="libgazebo_ros_ray_sensor_${name}" filename="libgazebo_ros_ray_sensor.so">
          <!-- ROS通信配置 -->
          <ros>
            <!-- 命名空间 -->
            <namespace>${namespace}</namespace>
            <!-- 话题重映射-->
            <remapping>~/out:=laserscan</remapping>
          </ros>
          <!-- 输出数据类型 -->
          <output_type>sensor_msgs/LaserScan</output_type>
          <!-- 最小强度阈值 -->
          <min_intensity>100.0</min_intensity>
          <!-- 坐标系名称 -->
          <frame_name>${frame_name}</frame_name>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>

  <!-- 宏定义：IMU -->
  <xacro:macro name="imudriver" params="reference name namespace">
    <!-- 绑定到模型 -->
    <gazebo reference="${reference}">
      <!-- 启用重力 -->
      <gravity>true</gravity>
      <!-- 类型和名称 -->
      <sensor name="${name}" type="imu">
        <!-- 保持打开 -->
        <always_on>true</always_on>
        <!-- 刷新率 -->
        <update_rate>1000</update_rate>
        <!-- GazeboIMU插件 -->
        <plugin name="libgazebo_ros_imu_sensor_${name}" filename="libgazebo_ros_imu_sensor.so">
          <!-- ROS通信配置 -->
          <ros>
            <!-- 命名空间 -->
            <namespace>${namespace}</namespace>
            <!-- 话题重映射-->
            <remapping>~/out:=imu</remapping>
          </ros>
        </plugin>
        <!-- IMU配置 -->
        <imu>
          <!-- 陀螺仪噪声 -->
          <angular_velocity>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
                <bias_mean>0.0000075</bias_mean>
                <bias_stddev>0.0000008</bias_stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
                <bias_mean>0.0000075</bias_mean>
                <bias_stddev>0.0000008</bias_stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
                <bias_mean>0.0000075</bias_mean>
                <bias_stddev>0.0000008</bias_stddev>
              </noise>
            </z>
          </angular_velocity>
          <!-- 加速度计噪声 -->
          <linear_acceleration>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
                <bias_mean>0.1</bias_mean>
                <bias_stddev>0.001</bias_stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
                <bias_mean>0.1</bias_mean>
                <bias_stddev>0.001</bias_stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
                <bias_mean>0.1</bias_mean>
                <bias_stddev>0.001</bias_stddev>
              </noise>
            </z>
          </linear_acceleration>
        </imu>
      </sensor>
    </gazebo>
  </xacro:macro>

  <!-- 宏定义：深度相机 -->
  <xacro:macro name="cameradriver" params="reference name namespace frame_name">
    <!-- 绑定到模型 -->
    <gazebo reference="${reference}">
      <!-- 类型和名称 -->
      <sensor name="${name}" type="depth">
        <!-- 刷新频率 -->
        <update_rate>30</update_rate>
        <!-- 相机配置 -->
        <camera>
          <!-- 水平视场角 -->
          <horizontal_fov>1.047198</horizontal_fov>
          <!-- 图像配置 -->
          <image>
            <!-- 图像宽度 -->
            <width>1280</width>
            <!-- 图像高度 -->
            <height>720</height>
            <!-- 图像颜色格式 -->
            <format>R8G8B8</format>
          </image>
          <!-- 相机裁剪 -->
          <clip>
            <!-- 最近可见距离 -->
            <near>0.05</near>
            <!-- 最远可见距离 -->
            <far>5</far>
          </clip>
        </camera>
        <!-- Gazebo深度相机插件 -->
        <plugin name="libgazebo_ros_camera_${name}" filename="libgazebo_ros_camera.so">
          <!-- ROS通信配置 -->
          <ros>
            <!-- 命名空间 -->
            <namespace>${namespace}</namespace>
            <!-- 话题重映射-->
            <remapping>image_raw:=custom_img</remapping>
            <remapping>camera_info:=custom_info</remapping>
            <remapping>image_trigger:=custom_trigger</remapping>
          </ros>
          <!-- 相机名称 -->
          <camera_name>${name}</camera_name>
          <!-- 坐标系名称 -->
          <frame_name>${frame_name}</frame_name>
          <!-- 触发模式 -->
          <triggered>false</triggered>
          <!-- 基线距离 -->
          <hack_baseline>0.07</hack_baseline>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>

</robot>
